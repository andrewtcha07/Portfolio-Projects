/*
===================
The 'Analyze' Phase
===================
*/

--------------
-- User Trends
--------------

-- User Overview
-- Select the user_type, count of rides, percentage of total rides, average ride length, and average ride distance for each user type
select
    user_type
  , count(*) as ride_count
  , cast(
        round(count(*) * 100.0 / sum(count(*)) over (), 2) as decimal(10, 2)
    ) as ride_count_percentage
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
group by
    user_type
order by
    user_type;

----------------
-- Hourly Trends
----------------

-- Hourly Overview
-- Select the user_type, hour, count of rides, average ride length, and average ride distance for casual users, ordered by ride count and hour (in 24-hour format)
select
    user_type
  , hour
  , count(*) as ride_count
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
where
    user_type = 'casual'
group by
    user_type
  , hour
order by
    ride_count desc
  , case
        when right(hour, 2) = 'AM' then cast(
            substring(hour, 1, charindex(' ', hour) - 1) as int
        )
        when right(hour, 2) = 'PM' then cast(
            substring(hour, 1, charindex(' ', hour) - 1) as int
        ) + 12
    end;

----------------
-- Weekly Trends
----------------

-- Weekly Overview
-- Select the user_type, day_of_week, count of rides, average ride length, and average ride distance for all users, ordered by user_type and day_of_week (in chronological order)
select
    user_type
  , day_of_week
  , count(*) as ride_count
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
group by
    user_type
  , day_of_week
order by
    user_type
  , case
        when day_of_week = 'Mon' then 1
        when day_of_week = 'Tue' then 2
        when day_of_week = 'Wed' then 3
        when day_of_week = 'Thu' then 4
        when day_of_week = 'Fri' then 5
        when day_of_week = 'Sat' then 6
        when day_of_week = 'Sun' then 7
    end;

-----------------
-- Monthly Trends
-----------------

-- Monthly Overview
-- Selects user_type, month, count of rides, average ride length, and average ride distance for all users, ordered by user_type and month (in chronological order)
select
    user_type
  , month
  , count(*) as ride_count
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
group by
    user_type
  , month
order by
    user_type
  , case
        when month = 'Jan' then 1
        when month = 'Feb' then 2
        when month = 'Mar' then 3
        when month = 'Apr' then 4
        when month = 'May' then 5
        when month = 'Jun' then 6
        when month = 'Jul' then 7
        when month = 'Aug' then 8
        when month = 'Sep' then 9
        when month = 'Oct' then 10
        when month = 'Nov' then 11
        when month = 'Dec' then 12
    end;

-------------------
-- Quarterly Trends
-------------------

-- Quarterly Overview
-- Selects user_type, quarter, count of rides, average ride length, and average ride distance for all users, ordered by user_type and quarter
select
    user_type
  , quarter
  , count(*) as ride_count
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
group by
    user_type
  , quarter
order by
    user_type
  , quarter;

------------------
-- Rideable Trends
------------------

-- Rideable Type Overview
-- Selects user_type, rideable_type, count of rides, average ride length, and average ride distance for all users, ordered by user_type and rideable_type
select
    user_type
  , rideable_type
  , count(*) as ride_count
  , cast(
        round(avg(ride_length_minute), 2) as decimal(10, 2)
    ) as avg_ride_length
  , cast(round(avg(ride_distance), 2) as decimal(10, 2)) as avg_ride_distance
from
    [dbo].[2023-divvy-tripdataupdated]
group by
    user_type
  , rideable_type
order by
    user_type
  , rideable_type;

----------------
-- Station Trend
----------------

-- Most Popular Start Stations
-- Retrieve the top 10 stations for casual and member users
select
    user_type
  , start_station_name
  , start_station_trips
from
    (
        -- Subquery to get the top 10 stations for casual users
        select
            'casual' as user_type -- Specify the user type as 'casual'
          , start_station_name -- Select the start station name
          , count(*) as start_station_trips -- Count the number of trips for each start station
        from
            [dbo].[2023-divvy-tripdataupdated] -- Select data from the updated table
        where
            start_station_name is not null -- Filter out null start station names
            and user_type = 'casual' -- Filter rows where the user type is 'casual'
        group by
            start_station_name -- Group the data by start station name
        order by
            start_station_trips desc -- Order the results by trip count in descending order
        offset
            0 rows -- Offset the result set by 0 rows (start from the beginning)
        fetch first
            10 rows only -- Fetch only the top 10 rows
    ) as TopCasualStations -- Alias the subquery as TopCasualStations
union all -- Combine the results of this subquery with the results of the next subquery using UNION ALL
select
    user_type
  , start_station_name
  , start_station_trips
from
    (
        -- Subquery to get the top 10 stations for member users
        select
            'member' as user_type -- Specify the user type as 'member'
          , start_station_name -- Select the start station name
          , count(*) as start_station_trips -- Count the number of trips for each start station
        from
            [dbo].[2023-divvy-tripdataupdated] -- Select data from the updated table
        where
            start_station_name is not null -- Filter out null start station names
            and user_type = 'member' -- Filter rows where the user type is 'member'
        group by
            start_station_name -- Group the data by start station name
        order by
            start_station_trips desc -- Order the results by trip count in descending order
        offset
            0 rows -- Offset the result set by 0 rows (start from the beginning)
        fetch first
            10 rows only -- Fetch only the top 10 rows
    ) as TopMemberStations; -- Alias the subquery as TopMemberStations

------------
-- Map Trend
------------

-- Most Traveled Routes
-- Select data about rides where start and end locations are different, grouped by user type, start and end station names, start and end coordinates, and rideable type
select
    user_type
  , start_station_name
  , start_lat
  , start_lng
  , end_station_name
  , end_lat
  , end_lng
  , rideable_type
  , count(*) as total_rides -- Count the total number of rides for each group
from
    [dbo].[2023-divvy-tripdataupdated] -- Select data from the updated table
where
    (
        start_lat != end_lat -- Filter rows where start latitude is different from end latitude
        or start_lng != end_lng -- Filter rows where start longitude is different from end longitude
    )
    and user_type = 'casual' -- Filter rows where the user type is 'casual'
    and start_station_name is not null -- Ensure start station name is not null
    and end_station_name is not null -- Ensure end station name is not null
group by
    user_type -- Group the data by user type
  , start_station_name -- Group the data by start station name
  , start_lat -- Group the data by start latitude
  , start_lng -- Group the data by start longitude
  , end_station_name -- Group the data by end station name
  , end_lat -- Group the data by end latitude
  , end_lng -- Group the data by end longitude
  , rideable_type -- Group the data by rideable type
having
    count(*) > 200 -- Filter groups with more than 200 rides
union all -- Combine the results of this query with the results of the next query using UNION ALL
select
    user_type
  , start_station_name
  , start_lat
  , start_lng
  , end_station_name
  , end_lat
  , end_lng
  , rideable_type
  , count(*) as total_rides -- Count the total number of rides for each group
from
    [dbo].[2023-divvy-tripdataupdated] -- Select data from the updated table
where
    (
        start_lat != end_lat -- Filter rows where start latitude is different from end latitude
        or start_lng != end_lng -- Filter rows where start longitude is different from end longitude
    )
    and user_type = 'member' -- Filter rows where the user type is 'member'
    and start_station_name is not null -- Ensure start station name is not null
    and end_station_name is not null -- Ensure end station name is not null
group by
    user_type -- Group the data by user type
  , start_station_name -- Group the data by start station name
  , start_lat -- Group the data by start latitude
  , start_lng -- Group the data by start longitude
  , end_station_name -- Group the data by end station name
  , end_lat -- Group the data by end latitude
  , end_lng -- Group the data by end longitude
  , rideable_type -- Group the data by rideable type
having
    count(*) > 200; -- Filter groups with more than 200 rides
