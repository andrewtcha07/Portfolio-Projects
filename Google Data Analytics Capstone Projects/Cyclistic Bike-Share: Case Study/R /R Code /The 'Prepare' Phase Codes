######################
# The 'Prepare' Phase
######################

# --------------------
# Installing Packages
# --------------------

# Install required packages
install.packages("tidyverse")  # Data manipulation and visualization
install.packages("janitor")    # Data cleaning
install.packages("readr")      # Reading data
install.packages("dplyr")      # Data manipulation
install.packages("lubridate")  # Date-time manipulation
install.packages("tidyr")      # Data tidying
install.packages("ggmap")      # Plotting maps
install.packages("ggplot2")    # Plotting
install.packages("geosphere")  # Geographical calculations
install.packages("skimr")      # Summary statistics

#-----------------
# Library Loading
# ----------------

# Load required libraries
library(tidyverse)   # Data manipulation and visualization
library(janitor)     # Data cleaning
library(readr)       # Reading data
library(dplyr)       # Data manipulation
library(lubridate)   # Date-time manipulation
library(tidyr)       # Data tidying
library(ggmap)       # Plotting maps
library(ggplot2)     # Plotting
library(geosphere)   # Geographical calculations
library(skimr)       # Summary statistics

# ------------
# Data Import
# ------------

# Read CSV files for each month in 2023
jan2023 <- read_csv("202301-divvy-tripdata.csv")
feb2023 <- read_csv("202302-divvy-tripdata.csv")
mar2023 <- read_csv("202303-divvy-tripdata.csv")
apr2023 <- read_csv("202304-divvy-tripdata.csv")
may2023 <- read_csv("202305-divvy-tripdata.csv")
jun2023 <- read_csv("202306-divvy-tripdata.csv")
jul2023 <- read_csv("202307-divvy-tripdata.csv")
aug2023 <- read_csv("202308-divvy-tripdata.csv")
sep2023 <- read_csv("202309-divvy-tripdata.csv")
oct2023 <- read_csv("202310-divvy-tripdata.csv")
nov2023 <- read_csv("202311-divvy-tripdata.csv")
dec2023 <- read_csv("202312-divvy-tripdata.csv")

# -----------------
# Data Exploration
# -----------------

# Display column names for each month's dataset
colnames(jan2023)
colnames(feb2023)
colnames(mar2023)
colnames(apr2023)
colnames(may2023)
colnames(jun2023)
colnames(jul2023)
colnames(aug2023)
colnames(sep2023)
colnames(oct2023)
colnames(nov2023)
colnames(dec2023)

# Display structure of each month's dataset
str(jan2023)
str(feb2023)
str(mar2023)
str(apr2023)
str(may2023)
str(jun2023)
str(jul2023)
str(aug2023)
str(sep2023)
str(oct2023)
str(nov2023)
str(dec2023)

# Display summary statistics for each month's dataset
summary(jan2023)
summary(feb2023)
summary(mar2023)
summary(apr2023)
summary(may2023)
summary(jun2023)
summary(jul2023)
summary(aug2023)
summary(sep2023)
summary(oct2023)
summary(nov2023)
summary(dec2023)

# -------------------
# Data Consolidation
# -------------------

# Combine all monthly datasets into one
trip_data <- bind_rows(
  list(
    jan2023, 
    feb2023, 
    mar2023, 
    apr2023, 
    may2023, 
    jun2023, 
    jul2023, 
    aug2023, 
    sep2023, 
    oct2023, 
    nov2023, 
    dec2023
  )
)

# Remove individual monthly datasets from the environment
rm(
  list = c(
    "jan2023", 
    "feb2023", 
    "mar2023", 
    "apr2023", 
    "may2023", 
    "jun2023", 
    "jul2023", 
    "aug2023", 
    "sep2023", 
    "oct2023", 
    "nov2023", 
    "dec2023"
  )
)

# ------------------------------
# Consolidated Data Exploration
# ------------------------------

# Check the class of the combined trip data
class(trip_data)

# Check the dimensions of the combined trip data
dim(trip_data)

# Display column names of the combined trip data
colnames(trip_data)

# Count the number of missing values in each column of the combined trip data
colSums(is.na(trip_data))

# Get the number of rows in the combined trip data
nrow(trip_data)

# Get the number of columns in the combined trip data
ncol(trip_data)

# Get the names of columns in the combined trip data
names(trip_data)

# Display the first few rows of the combined trip data
head(trip_data)

# Display the last few rows of the combined trip data
tail(trip_data)

# Display the structure of the combined trip data
str(trip_data)

# Display a concise summary of the combined trip data
glimpse(trip_data)

# Display summary statistics of the combined trip data without charts
skim_without_charts(trip_data)

# Display summary statistics of the combined trip data
summary(trip_data)

# -----------------------
# Missing Value Analysis
# -----------------------

# Attach the combined trip data to the search path
attach(trip_data)

# Display rows where ride_id is NA in the combined trip data
trip_data[is.na(ride_id),]

# Display rows where rideable_type is NA in the combined trip data
trip_data[is.na(rideable_type),]

# Display rows where started_at is NA in the combined trip data
trip_data[is.na(started_at),]

# Display rows where ended_at is NA in the combined trip data
trip_data[is.na(ended_at),]

# Display rows where start_station_name is NA in the combined trip data
trip_data[is.na(start_station_name),]

# Display rows where start_station_id is NA in the combined trip data
trip_data[is.na(start_station_id),]

# Display rows where end_station_name is NA in the combined trip data
trip_data[is.na(end_station_name),]

# Display rows where end_station_id is NA in the combined trip data
trip_data[is.na(end_station_id),]

# Display rows where start_lat is NA in the combined trip data
trip_data[is.na(start_lat),]

# Display rows where start_lng is NA in the combined trip data
trip_data[is.na(start_lng),]

# Display rows where end_lat is NA in the combined trip data
trip_data[is.na(end_lat),]

# Display rows where end_lng is NA in the combined trip data
trip_data[is.na(end_lng),]

# Display rows where member_casual is NA in the combined trip data
trip_data[is.na(member_casual),]

# Detach the combined trip data from the search path
detach(trip_data)
